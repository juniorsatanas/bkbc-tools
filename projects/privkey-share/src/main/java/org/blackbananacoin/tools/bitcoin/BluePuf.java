// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bkbc_blue.proto

package org.blackbananacoin.tools.bitcoin;

public final class BluePuf {
  private BluePuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ProtoBlueOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ProtoBlue.VerType version = 1;
    /**
     * <code>required .ProtoBlue.VerType version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required .ProtoBlue.VerType version = 1;</code>
     */
    org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType getVersion();

    // required .ProtoBlue.Type protoType = 2;
    /**
     * <code>required .ProtoBlue.Type protoType = 2;</code>
     */
    boolean hasProtoType();
    /**
     * <code>required .ProtoBlue.Type protoType = 2;</code>
     */
    org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type getProtoType();

    // required int64 bkbcValue = 3;
    /**
     * <code>required int64 bkbcValue = 3;</code>
     */
    boolean hasBkbcValue();
    /**
     * <code>required int64 bkbcValue = 3;</code>
     */
    long getBkbcValue();

    // optional .ProtoBlue.ExType exchangeType = 4;
    /**
     * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
     */
    boolean hasExchangeType();
    /**
     * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
     */
    org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType getExchangeType();
  }
  /**
   * Protobuf type {@code ProtoBlue}
   *
   * <pre>
   * Notes:
   * - To regenerate after editing, cd project protoc -I=src --java_out=src src/bkbc_blue.proto
   * </pre>
   */
  public static final class ProtoBlue extends
      com.google.protobuf.GeneratedMessage
      implements ProtoBlueOrBuilder {
    // Use ProtoBlue.newBuilder() to construct.
    private ProtoBlue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProtoBlue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProtoBlue defaultInstance;
    public static ProtoBlue getDefaultInstance() {
      return defaultInstance;
    }

    public ProtoBlue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProtoBlue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType value = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                version_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type value = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                protoType_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bkbcValue_ = input.readInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType value = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                exchangeType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.blackbananacoin.tools.bitcoin.BluePuf.internal_static_ProtoBlue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.blackbananacoin.tools.bitcoin.BluePuf.internal_static_ProtoBlue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.class, org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Builder.class);
    }

    public static com.google.protobuf.Parser<ProtoBlue> PARSER =
        new com.google.protobuf.AbstractParser<ProtoBlue>() {
      public ProtoBlue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtoBlue(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoBlue> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code ProtoBlue.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>BURN = 0;</code>
       */
      BURN(0, 0),
      /**
       * <code>SEND = 1;</code>
       */
      SEND(1, 1),
      /**
       * <code>ORDER = 2;</code>
       */
      ORDER(2, 2),
      /**
       * <code>TEST = 3;</code>
       */
      TEST(3, 3),
      ;

      /**
       * <code>BURN = 0;</code>
       */
      public static final int BURN_VALUE = 0;
      /**
       * <code>SEND = 1;</code>
       */
      public static final int SEND_VALUE = 1;
      /**
       * <code>ORDER = 2;</code>
       */
      public static final int ORDER_VALUE = 2;
      /**
       * <code>TEST = 3;</code>
       */
      public static final int TEST_VALUE = 3;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return BURN;
          case 1: return SEND;
          case 2: return ORDER;
          case 3: return TEST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ProtoBlue.Type)
    }

    /**
     * Protobuf enum {@code ProtoBlue.VerType}
     */
    public enum VerType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MAIN1 = 0;</code>
       */
      MAIN1(0, 0),
      /**
       * <code>TEST1 = 1;</code>
       */
      TEST1(1, 1),
      ;

      /**
       * <code>MAIN1 = 0;</code>
       */
      public static final int MAIN1_VALUE = 0;
      /**
       * <code>TEST1 = 1;</code>
       */
      public static final int TEST1_VALUE = 1;


      public final int getNumber() { return value; }

      public static VerType valueOf(int value) {
        switch (value) {
          case 0: return MAIN1;
          case 1: return TEST1;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VerType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<VerType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VerType>() {
              public VerType findValueByNumber(int number) {
                return VerType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.getDescriptor().getEnumTypes().get(1);
      }

      private static final VerType[] VALUES = values();

      public static VerType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private VerType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ProtoBlue.VerType)
    }

    /**
     * Protobuf enum {@code ProtoBlue.ExType}
     */
    public enum ExType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>BTC_TWD = 1;</code>
       */
      BTC_TWD(0, 1),
      /**
       * <code>BTC_LTC = 2;</code>
       */
      BTC_LTC(1, 2),
      ;

      /**
       * <code>BTC_TWD = 1;</code>
       */
      public static final int BTC_TWD_VALUE = 1;
      /**
       * <code>BTC_LTC = 2;</code>
       */
      public static final int BTC_LTC_VALUE = 2;


      public final int getNumber() { return value; }

      public static ExType valueOf(int value) {
        switch (value) {
          case 1: return BTC_TWD;
          case 2: return BTC_LTC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ExType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ExType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ExType>() {
              public ExType findValueByNumber(int number) {
                return ExType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.getDescriptor().getEnumTypes().get(2);
      }

      private static final ExType[] VALUES = values();

      public static ExType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ExType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ProtoBlue.ExType)
    }

    private int bitField0_;
    // required .ProtoBlue.VerType version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType version_;
    /**
     * <code>required .ProtoBlue.VerType version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ProtoBlue.VerType version = 1;</code>
     */
    public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType getVersion() {
      return version_;
    }

    // required .ProtoBlue.Type protoType = 2;
    public static final int PROTOTYPE_FIELD_NUMBER = 2;
    private org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type protoType_;
    /**
     * <code>required .ProtoBlue.Type protoType = 2;</code>
     */
    public boolean hasProtoType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ProtoBlue.Type protoType = 2;</code>
     */
    public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type getProtoType() {
      return protoType_;
    }

    // required int64 bkbcValue = 3;
    public static final int BKBCVALUE_FIELD_NUMBER = 3;
    private long bkbcValue_;
    /**
     * <code>required int64 bkbcValue = 3;</code>
     */
    public boolean hasBkbcValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 bkbcValue = 3;</code>
     */
    public long getBkbcValue() {
      return bkbcValue_;
    }

    // optional .ProtoBlue.ExType exchangeType = 4;
    public static final int EXCHANGETYPE_FIELD_NUMBER = 4;
    private org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType exchangeType_;
    /**
     * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
     */
    public boolean hasExchangeType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
     */
    public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType getExchangeType() {
      return exchangeType_;
    }

    private void initFields() {
      version_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType.MAIN1;
      protoType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type.BURN;
      bkbcValue_ = 0L;
      exchangeType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType.BTC_TWD;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProtoType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBkbcValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, protoType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, bkbcValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, exchangeType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, protoType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, bkbcValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, exchangeType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ProtoBlue}
     *
     * <pre>
     * Notes:
     * - To regenerate after editing, cd project protoc -I=src --java_out=src src/bkbc_blue.proto
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.blackbananacoin.tools.bitcoin.BluePuf.internal_static_ProtoBlue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.blackbananacoin.tools.bitcoin.BluePuf.internal_static_ProtoBlue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.class, org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Builder.class);
      }

      // Construct using org.blackbananacoin.incubator.extbitcoinj.proto.BluePuf.ProtoBlue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType.MAIN1;
        bitField0_ = (bitField0_ & ~0x00000001);
        protoType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type.BURN;
        bitField0_ = (bitField0_ & ~0x00000002);
        bkbcValue_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        exchangeType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType.BTC_TWD;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.blackbananacoin.tools.bitcoin.BluePuf.internal_static_ProtoBlue_descriptor;
      }

      public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue getDefaultInstanceForType() {
        return org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.getDefaultInstance();
      }

      public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue build() {
        org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue buildPartial() {
        org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue result = new org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.protoType_ = protoType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bkbcValue_ = bkbcValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exchangeType_ = exchangeType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue) {
          return mergeFrom((org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue other) {
        if (other == org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasProtoType()) {
          setProtoType(other.getProtoType());
        }
        if (other.hasBkbcValue()) {
          setBkbcValue(other.getBkbcValue());
        }
        if (other.hasExchangeType()) {
          setExchangeType(other.getExchangeType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasProtoType()) {
          
          return false;
        }
        if (!hasBkbcValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ProtoBlue.VerType version = 1;
      private org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType version_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType.MAIN1;
      /**
       * <code>required .ProtoBlue.VerType version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ProtoBlue.VerType version = 1;</code>
       */
      public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType getVersion() {
        return version_;
      }
      /**
       * <code>required .ProtoBlue.VerType version = 1;</code>
       */
      public Builder setVersion(org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ProtoBlue.VerType version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.VerType.MAIN1;
        onChanged();
        return this;
      }

      // required .ProtoBlue.Type protoType = 2;
      private org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type protoType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type.BURN;
      /**
       * <code>required .ProtoBlue.Type protoType = 2;</code>
       */
      public boolean hasProtoType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .ProtoBlue.Type protoType = 2;</code>
       */
      public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type getProtoType() {
        return protoType_;
      }
      /**
       * <code>required .ProtoBlue.Type protoType = 2;</code>
       */
      public Builder setProtoType(org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        protoType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ProtoBlue.Type protoType = 2;</code>
       */
      public Builder clearProtoType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        protoType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.Type.BURN;
        onChanged();
        return this;
      }

      // required int64 bkbcValue = 3;
      private long bkbcValue_ ;
      /**
       * <code>required int64 bkbcValue = 3;</code>
       */
      public boolean hasBkbcValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 bkbcValue = 3;</code>
       */
      public long getBkbcValue() {
        return bkbcValue_;
      }
      /**
       * <code>required int64 bkbcValue = 3;</code>
       */
      public Builder setBkbcValue(long value) {
        bitField0_ |= 0x00000004;
        bkbcValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 bkbcValue = 3;</code>
       */
      public Builder clearBkbcValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bkbcValue_ = 0L;
        onChanged();
        return this;
      }

      // optional .ProtoBlue.ExType exchangeType = 4;
      private org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType exchangeType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType.BTC_TWD;
      /**
       * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
       */
      public boolean hasExchangeType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
       */
      public org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType getExchangeType() {
        return exchangeType_;
      }
      /**
       * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
       */
      public Builder setExchangeType(org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        exchangeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ProtoBlue.ExType exchangeType = 4;</code>
       */
      public Builder clearExchangeType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exchangeType_ = org.blackbananacoin.tools.bitcoin.BluePuf.ProtoBlue.ExType.BTC_TWD;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ProtoBlue)
    }

    static {
      defaultInstance = new ProtoBlue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ProtoBlue)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ProtoBlue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ProtoBlue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017bkbc_blue.proto\"\206\002\n\tProtoBlue\022#\n\007versi" +
      "on\030\001 \002(\0162\022.ProtoBlue.VerType\022\"\n\tprotoTyp" +
      "e\030\002 \002(\0162\017.ProtoBlue.Type\022\021\n\tbkbcValue\030\003 " +
      "\002(\003\022\'\n\014exchangeType\030\004 \001(\0162\021.ProtoBlue.Ex" +
      "Type\"/\n\004Type\022\010\n\004BURN\020\000\022\010\n\004SEND\020\001\022\t\n\005ORDE" +
      "R\020\002\022\010\n\004TEST\020\003\"\037\n\007VerType\022\t\n\005MAIN1\020\000\022\t\n\005T" +
      "EST1\020\001\"\"\n\006ExType\022\013\n\007BTC_TWD\020\001\022\013\n\007BTC_LTC" +
      "\020\002B:\n/org.blackbananacoin.incubator.extb" +
      "itcoinj.protoB\007BluePuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ProtoBlue_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ProtoBlue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ProtoBlue_descriptor,
              new java.lang.String[] { "Version", "ProtoType", "BkbcValue", "ExchangeType", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
